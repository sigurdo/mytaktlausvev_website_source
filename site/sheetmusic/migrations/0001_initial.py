# Generated by Django 3.2.9 on 2021-11-30 22:54

import autoslug.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import upload_validator


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='tittel')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='tidsmerke')),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from='title', unique=True, verbose_name='lenkjenamn')),
            ],
            options={
                'verbose_name': 'note',
                'verbose_name_plural': 'notar',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Pdf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(default=None, upload_to='sheetmusic/original_pdfs/', validators=[upload_validator.FileTypeValidator(allowed_extensions=['.pdf', '.PDF'], allowed_types=['application/pdf', 'application/x-pdf', 'application/x-bzpdf', 'application/x-gzpdf'])], verbose_name='fil')),
                ('processing', models.BooleanField(default=False, editable=False, verbose_name='prosessering pågår')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='tidsmerke')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='sheetmusic.score', verbose_name='note')),
            ],
            options={
                'verbose_name': 'pdf',
                'verbose_name_plural': 'pdfar',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='namn')),
                ('from_page', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(1)], verbose_name='første side')),
                ('to_page', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(1)], verbose_name='siste side')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='tidsmerke')),
                ('slug', autoslug.fields.AutoSlugField(editable=True, populate_from='name', unique_with=('pdf__score__slug',), verbose_name='lenkjenamn')),
                ('pdf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='sheetmusic.pdf', verbose_name='pdf')),
            ],
            options={
                'verbose_name': 'stemme',
                'verbose_name_plural': 'stemmer',
                'ordering': ['pdf', 'from_page', 'to_page', 'name'],
            },
        ),
        migrations.CreateModel(
            name='FavoritePart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favoring_users', to='sheetmusic.part', verbose_name='stemme')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_parts', to=settings.AUTH_USER_MODEL, verbose_name='brukar')),
            ],
            options={
                'verbose_name': 'favorittstemme',
                'verbose_name_plural': 'favorittstemmer',
                'ordering': ['user', 'part'],
            },
        ),
        migrations.AddConstraint(
            model_name='favoritepart',
            constraint=models.UniqueConstraint(fields=('user', 'part'), name='unique_user_part'),
        ),
    ]
