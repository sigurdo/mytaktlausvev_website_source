# Generated by Django 4.0.2 on 2022-02-12 11:45

import accounts.models
import autoslug.fields
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='username', unique=True, verbose_name='lenkjenamn')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='navn')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='fødselsdato')),
                ('phone_number', models.CharField(blank=True, max_length=255, verbose_name='telefonnummer')),
                ('address', models.TextField(blank=True, verbose_name='adresse')),
                ('home_page', models.URLField(blank=True, max_length=255, verbose_name='heimeside')),
                ('student_card_number', models.CharField(blank=True, help_text='Nummeret på studentkortet ditt. Skriv det inn om du vil ha tilgang til lageret. Nummeret er det som byrjar med EM.', max_length=255, verbose_name='studentkort-nummer')),
                ('avatar', models.ImageField(blank=True, upload_to='profile/', verbose_name='profilbilde')),
                ('membership_status', models.CharField(choices=[('ACTIVE', 'Aktiv'), ('INACTIVE', 'Inaktiv'), ('RETIRED', 'Pensjonist'), ('HONORARY', 'Æresmedlem')], default='ACTIVE', max_length=30, verbose_name='medlemsstatus')),
                ('membership_period', models.CharField(blank=True, help_text='Årstal, semester - Årstal, semester. Til dømes "2005, Haust - 2009, Vår" eller "2009, Haust -"', max_length=255, verbose_name='medlemsperiode')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', accounts.models.UserManagerCustom()),
            ],
        ),
    ]
