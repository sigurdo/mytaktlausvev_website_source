# Generated by Django 4.1 on 2023-01-29 19:08

import autoslug.fields
import django.db.models.deletion
import django_userforeignkey.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="lagt ut"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="redigert"),
                ),
                ("price", models.IntegerField(verbose_name="pris")),
                (
                    "comment",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="kommentar"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("PURCHASE", "Kjøp"), ("DEPOSIT", "Innbetaling")],
                        max_length=30,
                        verbose_name="type",
                    ),
                ),
                (
                    "created_by",
                    django_userforeignkey.models.fields.UserForeignKey(
                        blank=True,
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="laga av",
                    ),
                ),
                (
                    "modified_by",
                    django_userforeignkey.models.fields.UserForeignKey(
                        blank=True,
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="redigert av",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="brewing_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="brukar",
                    ),
                ),
            ],
            options={
                "verbose_name": "transaksjon",
                "verbose_name_plural": "transaksjonar",
            },
        ),
        migrations.CreateModel(
            name="Brew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="lagt ut"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="redigert"),
                ),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, verbose_name="namn"),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=True,
                        populate_from="name",
                        unique=True,
                        verbose_name="lenkjenamn",
                    ),
                ),
                ("price_per_litre", models.IntegerField(verbose_name="literpris")),
                (
                    "available_for_purchase",
                    models.BooleanField(
                        default=False, verbose_name="tilgjengeleg for kjøp"
                    ),
                ),
                (
                    "created_by",
                    django_userforeignkey.models.fields.UserForeignKey(
                        blank=True,
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="laga av",
                    ),
                ),
                (
                    "modified_by",
                    django_userforeignkey.models.fields.UserForeignKey(
                        blank=True,
                        editable=False,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="redigert av",
                    ),
                ),
            ],
            options={
                "verbose_name": "brygg",
                "verbose_name_plural": "brygg",
                "ordering": ["name"],
            },
        ),
        migrations.AddConstraint(
            model_name="transaction",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("price__gt", 0), ("type", "DEPOSIT")),
                    models.Q(("price__lt", 0), ("type", "PURCHASE")),
                    _connector="OR",
                ),
                name="brew_purchases_must_be_negative",
                violation_error_message="Innbetalingar må ha ein positiv pris, kjøp må ha ein negativ pris.",
            ),
        ),
    ]
